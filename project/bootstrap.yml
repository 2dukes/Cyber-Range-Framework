# Playbook used to setup local environment.
# This configuration is suited for Ubuntu-based environments.
# It performs setup of:
# - Docker
# - SSH
# It assumes Ansible and Python packages are already installed on the control node.

---
- name: Install Docker and SSH client
  hosts: localhost
  become: true
  tasks:
    - name: Fetch Machine Architecture
      ansible.builtin.command: 'dpkg --print-architecture'
      changed_when: false
      register: machine_architecture

    - name: Install Required Packages (Docker + SSH)
      ansible.builtin.apt:
        pkg:
          - openssh-client
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-requests
        update_cache: true

    - name: Setup Docker
      block:
        - name: Docker PGP Key
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/trusted.gpg.d/docker.asc
            mode: '0644'

        - name: Docker APT Repository
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc]
              https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present

    - name: Install Docker Packages
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        update_cache: true

    - name: Create keys/ directory
      ansible.builtin.file:
        path: keys/
        state: directory
        mode: '0755'

    - name: Check If Keys Already Exist
      ansible.builtin.stat:
        path: "keys/id_key"
      register: result

    - name: Generate SSH Key Pair
      community.crypto.openssh_keypair:
        path: keys/id_key
        type: ed25519
      when: not result.stat.exists
