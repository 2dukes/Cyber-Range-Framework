- name: Install DNS Server Package
  package:
    name:
      - bind
    state: latest

- name: Copy DNS Name Options File
  template:
    src: "named.conf.options.j2"
    dest: /etc/bind/named.conf.options
    mode: '0755'

- name: Copy DNS Name File
  template:
    src: "named.conf.j2"
    dest: /etc/bind/named.conf
    mode: '0755'

# Dynamic Configurations

- name: Copy named.conf.local template
  template:
    src: "named.conf.local.j2"
    dest: /etc/bind/named.conf.local
    mode: '0755'

- name: Copy DNS Zone File (Internal)
  vars:
    network_type: "internal"    
    domain_machine: "{{ ((selected_machines | selectattr('name', '==', dns_info[network_type].machine))[0]['networks'] | selectattr('name', '==', dns_info[network_type].network) | map(attribute='ipv4_address')) | first }}"
    ns_machine: "{{ ((machines | selectattr('name', '==', 'dns_server'))[0]['networks'] | selectattr('name', '==', 'dmz_net') | map(attribute='ipv4_address')) | first }}"
  template:
    src: "db.template.j2"
    dest: "/var/bind/db.internal.{{ dns_info.domain }}"
    mode: '0755'
  loop: "{{ dns }}"
  loop_control:
    loop_var: dns_info

- name: Copy DNS Zone File (External)
  vars:
    network_type: "external"    
    domain_machine: "{{ ((selected_machines | selectattr('name', '==', dns_info[network_type].machine))[0]['networks'] | selectattr('name', '==', dns_info[network_type].network) | map(attribute='ipv4_address')) | first }}"
    ns_machine: "{{ ((machines | selectattr('name', '==', 'dns_server'))[0]['networks'] | selectattr('name', '==', 'dmz_net') | map(attribute='ipv4_address')) | first }}"
  template:
    src: "db.template.j2"
    dest: "/var/bind/db.external.{{ dns_info.domain }}"
    mode: '0755'
  loop: "{{ dns }}"
  loop_control:
    loop_var: dns_info

############################################

- name: Delete Previous DNS File
  file:
    state: absent
    path: /etc/bind/named.conf.authoritative

- name: Delete Previous DNS File
  file:
    state: absent
    path: /etc/bind/named.conf.recursive

- name: Start DNS service
  ansible.builtin.service:
    name: named
    state: started
