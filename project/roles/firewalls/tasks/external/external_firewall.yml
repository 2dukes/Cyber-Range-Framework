- name: Default Policy for FORWARD Chain is DROP
  ansible.builtin.iptables:
    chain: FORWARD
    policy: DROP

- name: Accept Already Established Connections to Internal/DMZ Networks
  ansible.builtin.iptables:
    chain: FORWARD
    ctstate: ESTABLISHED,RELATED
    destination: "{{ networks.internal_net.network_addr }},{{ networks.dmz_net.network_addr }}"
    jump: ACCEPT

- name: Accept Packets from Internal/DMZ Networks
  ansible.builtin.iptables:
    chain: FORWARD
    source: "{{ networks.internal_net.network_addr }},{{ networks.dmz_net.network_addr }}"
    jump: ACCEPT

# DNS

- name: TCP FW PREROUTING Rule [DNS]
  ansible.builtin.shell: iptables -A PREROUTING -p tcp -t nat -i eth1 --dport 53 -j DNAT --to "{{ dns_server_ip }}:53"

- name: UDP FW PREROUTING Rule [DNS]
  ansible.builtin.shell: iptables -A PREROUTING -p udp -t nat -i eth1 --dport 53 -j DNAT --to "{{ dns_server_ip }}:53"

# - name: DNS PREROUTING Rules 1
#   ansible.builtin.iptables:
#     chain: PREROUTING
#     table: nat
#     in_interface: eth1
#     destination_port: 53
#     protocol: tcp
#     to_destination: "{{ ((machines | selectattr('name', '==', 'dns_server'))[0]['networks'] | selectattr('name', '==', 'dmz_net') | map(attribute='ipv4_address')) | first }}"
#     to_ports: 53
#     jump: DNAT

# - name: DNS PREROUTING Rules 2
#   ansible.builtin.iptables:
#     chain: PREROUTING
#     table: nat
#     in_interface: eth1
#     destination_port: 53
#     protocol: udp
#     to_destination: "{{ ((machines | selectattr('name', '==', 'dns_server'))[0]['networks'] | selectattr('name', '==', 'dmz_net') | map(attribute='ipv4_address')) | first }}"
#     to_ports: 53
#     jump: DNAT

- name: FW FORWARD Rule [DNS]
  ansible.builtin.iptables:
    chain: FORWARD
    destination: "{{ dns_server_ip }}"
    jump: ACCEPT

- name: FW POSTROUTING Rule [DNS]
  ansible.builtin.iptables:
    chain: POSTROUTING
    table: nat
    destination: "{{ dns_server_ip }}"
    jump: MASQUERADE

# Port Forwarding (CHANGE RULES' NAMES)

- name: External Firewall Tasks (Forward)
  ansible.builtin.include_tasks: external/forward_rules.yml
  loop: "{{ port_forwarding }}"
  loop_control:
    loop_var: forward_info
  when: port_forwarding is defined

- name: External Firewall Tasks (Prerouting)
  ansible.builtin.include_tasks: external/preroute_rules.yml
  loop: "{{ port_forwarding }}"
  loop_control:
    loop_var: forward_info
  when: port_forwarding is defined

- name: External Firewall Tasks (Postrouting)
  ansible.builtin.iptables:
    chain: POSTROUTING
    table: nat
    destination: "{{ ((selected_machines | selectattr('name', '==', forward_info.to_machine))[0]['networks'] | selectattr('name', '==', forward_info.to_network) | map(attribute='ipv4_address')) | first }}"
    jump: MASQUERADE
  loop: "{{ port_forwarding }}"
  loop_control:
    loop_var: forward_info
  when: port_forwarding is defined
