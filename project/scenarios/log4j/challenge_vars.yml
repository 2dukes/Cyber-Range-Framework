dns:
  - domain: example-domain.ui.com
    machine: vuln_service
    internal:
      network: dmz_net
    external:
      network: dmz_net
  - domain: test1.com
    machine: reverse_proxy1
    internal:
      network: dmz_net
    external:
      network: dmz_net
  - domain: test2.com
    machine: reverse_proxy1
    internal:
      network: dmz_net
    external:
      network: dmz_net

vulnerables:
  images:
    - name: unifi_log4j
      path: scenarios/log4j
      dockerfile: Dockerfile.alpine.mongo
      args:
        VERSION: "6.4.54"
    - name: reverse_proxy
      path: reverse_proxy
    - name: admin_bot_api
      path: bot/api
    - name: admin_bot_frontend
      path: bot/my-app
      args:
        api: test2.com # Domain
        
  machines:
    - name: vuln_service
      image: unifi_log4j
      group:
        - custom_machines
      dns_server: true
      networks:
        - name: dmz_net
          ipv4_address: 172.{{ networks.dmz_net.random_byte }}.0.30
      volumes:
        - "{{ playbook_dir }}/scenarios/log4j/unifi-certs:/usr/lib/unifi/cert"
      vars:
        username: test_user
        password: test_password
        email: admin@hotmail.com

    - name: reverse_proxy1
      image: reverse_proxy
      group:
        - reverse_proxies
      dns_server: true
      networks:
        - name: dmz_net
          ipv4_address: 172.{{ networks.dmz_net.random_byte }}.0.40
      vars:
        - domain: test1.com
          targets: 
            - name: admin_bot_frontend
              network: dmz_net
              port: 3000
        - domain: test2.com
          targets: 
            - name: admin_bot_api
              network: dmz_net
              port: 8000

    - name: admin_bot_frontend
      image: admin_bot_frontend
      group:
        - custom_machines
      dns_server: true
      networks:
        - name: dmz_net
          ipv4_address: 172.{{ networks.dmz_net.random_byte }}.0.42
    
    - name: admin_bot_api
      image: admin_bot_api
      group:
        - custom_machines
      dns_server: true
      networks:
        - name: dmz_net
          ipv4_address: 172.{{ networks.dmz_net.random_byte }}.0.43
       
    # - name: reverse_proxy2
    #   image: reverse_proxy
    #   group:
    #     - reverse_proxies
    #   dns_server: true
    #   networks:
    #     - name: dmz_net
    #       ipv4_address: 172.{{ networks.dmz_net.random_byte }}.0.41
    #   vars:
    #     domain: test2.com
    #     targets: 
    #       - name: admin_bot_api
    #         network: dmz_net
    #         port: 8000

setup:
  machines:
    - name: attacker_machine
      setup: "{{ playbook_dir }}/scenarios/log4j/setup/*.j2"
